diff --git a/arch/arm/Kconfig b/arch/arm/Kconfig
index b5d529f..100df1d 100644
--- a/arch/arm/Kconfig
+++ b/arch/arm/Kconfig
@@ -748,6 +748,8 @@ source "arch/arm/mach-highbank/Kconfig"
 
 source "arch/arm/mach-hisi/Kconfig"
 
+source "arch/arm/mach-hibvt/Kconfig"
+
 source "arch/arm/mach-integrator/Kconfig"
 
 source "arch/arm/mach-iop32x/Kconfig"
diff --git a/arch/arm/Kconfig.debug b/arch/arm/Kconfig.debug
index d83f7c3..4a150d5 100644
--- a/arch/arm/Kconfig.debug
+++ b/arch/arm/Kconfig.debug
@@ -287,6 +287,14 @@ choice
 		  Say Y here if you want kernel low-level debugging support
 		  on HI3620 UART.
 
+	config DEBUG_HI3536DV100_UART
+		bool "Hisilicon Hi3536DV100 Debug UART"
+		depends on ARCH_HI3536DV100
+		select DEBUG_UART_PL01X
+		help
+			Say Y here if you want kernel low-level debugging support
+			on HI3536DV100 UART.
+
 	config DEBUG_HIGHBANK_UART
 		bool "Kernel low-level debugging messages via Highbank UART"
 		depends on ARCH_HIGHBANK
@@ -1530,6 +1546,7 @@ config DEBUG_UART_PHYS
 	default 0xf991e000 if DEBUG_QCOM_UARTDM
 	default 0xfc00c000 if DEBUG_AT91_SAMA5D4_USART3
 	default 0xfcb00000 if DEBUG_HI3620_UART
+	default 0x12080000 if DEBUG_HI3536DV100_UART
 	default 0xfd883000 if DEBUG_ALPINE_UART0
 	default 0xfe800000 if ARCH_IOP32X
 	default 0xff690000 if DEBUG_RK32_UART2
@@ -1619,6 +1637,7 @@ config DEBUG_UART_VIRT
 	default 0xfe300000 if DEBUG_BCM_KONA_UART
 	default 0xfe800000 if ARCH_IOP32X
 	default 0xfeb00000 if DEBUG_HI3620_UART || DEBUG_HIX5HD2_UART
+	default 0xfe480000 if DEBUG_HI3536DV100_UART
 	default 0xfeb24000 if DEBUG_RK3X_UART0
 	default 0xfeb26000 if DEBUG_RK3X_UART1
 	default 0xfeb30c00 if DEBUG_KEYSTONE_UART0
diff --git a/arch/arm/Makefile b/arch/arm/Makefile
index 6be9ee1..53409ce 100644
--- a/arch/arm/Makefile
+++ b/arch/arm/Makefile
@@ -170,6 +170,7 @@ machine-$(CONFIG_ARCH_FOOTBRIDGE)	+= footbridge
 machine-$(CONFIG_ARCH_GEMINI)		+= gemini
 machine-$(CONFIG_ARCH_HIGHBANK)		+= highbank
 machine-$(CONFIG_ARCH_HISI)		+= hisi
+machine-$(CONFIG_ARCH_HISI_BVT)		+= hibvt
 machine-$(CONFIG_ARCH_INTEGRATOR)	+= integrator
 machine-$(CONFIG_ARCH_IOP13XX)		+= iop13xx
 machine-$(CONFIG_ARCH_IOP32X)		+= iop32x
@@ -268,6 +269,10 @@ endif
 endif
 endif
 
+ifeq ($(CONFIG_ARCH_HISI_BVT),y)
+KBUILD_CPPFLAGS += $(patsubst %,-I%include,$(machdirs) $(platdirs))
+endif
+
 export	TEXT_OFFSET GZFLAGS MMUEXT
 
 # Do we have FASTFPE?
 diff --git a/arch/arm/mach-hibvt/Kconfig b/arch/arm/mach-hibvt/Kconfig
new file mode 100644
index 0000000..ac0db1c
--- /dev/null
+++ b/arch/arm/mach-hibvt/Kconfig
@@ -0,0 +1,36 @@
+config ARCH_HISI_BVT
+	bool "Hisilicon BVT SoC Support"
+	select ARM_AMBA
+	select ARM_GIC
+	select ARM_TIMER_SP804
+	select POWER_RESET
+	select POWER_RESET_HISI
+	select POWER_SUPPLY
+
+if ARCH_HISI_BVT
+
+menu "Hisilicon BVT platform type"
+
+config HI_ZRELADDR
+       hex 'zreladdr'
+       default "0x80008000"
+
+config HI_PARAMS_PHYS
+       hex 'params_phys'
+       default "0x00000100"
+
+config HI_INITRD_PHYS
+       hex 'initrd_phys'
+       default "0x00800000"
+
+config ARCH_HI3536DV100
+	bool "Hisilicon Hi3536DV100 Cortex-A7(Single) family"
+	depends on ARCH_MULTI_V7
+	select HAVE_ARM_ARCH_TIMER
+	select PINCTRL
+	help
+		Support for Hisilicon Hi3536DV100 Soc family.
+
+endmenu
+
+endif
diff --git a/arch/arm/mach-hibvt/Makefile b/arch/arm/mach-hibvt/Makefile
new file mode 100644
index 0000000..680a8a8
--- /dev/null
+++ b/arch/arm/mach-hibvt/Makefile
@@ -0,0 +1,5 @@
+#
+# Makefile for Hisilicon processors family
+#
+
+obj-$(CONFIG_ARCH_HI3536DV100) += mach-hi3536dv100.o
diff --git a/arch/arm/mach-hibvt/Makefile.boot b/arch/arm/mach-hibvt/Makefile.boot
new file mode 100644
index 0000000..be34718
--- /dev/null
+++ b/arch/arm/mach-hibvt/Makefile.boot
@@ -0,0 +1,3 @@
+zreladdr-$(CONFIG_ARCH_HISI_BVT)      := $(CONFIG_HI_ZRELADDR)
+params_phys-$(CONFIG_ARCH_HISI_BVT)   := $(CONFIG_HI_PARAMS_PHYS)
+initrd_phys-$(CONFIG_ARCH_HISI_BVT)   := $(CONFIG_HI_INITRD_PHYS)
diff --git a/arch/arm/mach-hibvt/include/mach/hi3536dv100_io.h b/arch/arm/mach-hibvt/include/mach/hi3536dv100_io.h
new file mode 100644
index 0000000..6135e75
--- /dev/null
+++ b/arch/arm/mach-hibvt/include/mach/hi3536dv100_io.h
@@ -0,0 +1,44 @@
+#ifndef __HI3536DV100_IO_H
+#define __HI3536DV100_IO_H
+
+/*  phys_addr		virt_addr
+ *  0x1100_0000 <-----> 0xFE00_0000
+ *  0x1104_0000 <-----> 0xFE04_0000
+ */
+#define HI3536DV100_IOCH1_VIRT (0xFE000000)
+#define HI3536DV100_IOCH1_PHYS (0x11000000)
+#define HI3536DV100_IOCH1_SIZE (0x00040000)
+
+/* phys_addr        virt_addr
+ * 0x1200_0000 <-----> 0xFE10_0000
+ * 0x121B_0000 <-----> 0xFE2B_0000
+ */
+#define HI3536DV100_IOCH2_VIRT (0xFE100000)
+#define HI3536DV100_IOCH2_PHYS (0x12000000)
+#define HI3536DV100_IOCH2_SIZE (0x001B0000)
+
+/* phys_addr        virt_addr
+ * 0x1300_0000 <-----> 0xFE30_0000
+ * 0x1321_0000 <-----> 0xFE51_0000
+ */
+#define HI3536DV100_IOCH3_VIRT (0xFE300000)
+#define HI3536DV100_IOCH3_PHYS (0x13000000)
+#define HI3536DV100_IOCH3_SIZE (0x00210000)
+
+#define IO_OFFSET_LOW		(0xEB300000)
+#define IO_OFFSET_MID		(0xEC100000)
+#define IO_OFFSET_HIGH		(0xED000000)
+
+#define IO_ADDRESS_LOW(x)	((x) + IO_OFFSET_LOW)
+#define IO_ADDRESS_MID(x)	((x) + IO_OFFSET_MID)
+#define IO_ADDRESS_HIGH(x)	((x) + IO_OFFSET_HIGH)
+
+#define __IO_ADDRESS_HIGH(x) ((x >= HI3536DV100_IOCH2_PHYS) ? IO_ADDRESS_MID(x) \
+				: IO_ADDRESS_HIGH(x))
+#define IO_ADDRESS(x)   ((x) >= HI3536DV100_IOCH3_PHYS ? IO_ADDRESS_LOW(x) \
+				: __IO_ADDRESS_HIGH(x))
+
+#define __io_address(x) (IOMEM(IO_ADDRESS(x)))
+
+#endif
+
diff --git a/arch/arm/mach-hibvt/include/mach/hi3536dv100_platform.h b/arch/arm/mach-hibvt/include/mach/hi3536dv100_platform.h
new file mode 100644
index 0000000..bf21bc5
--- /dev/null
+++ b/arch/arm/mach-hibvt/include/mach/hi3536dv100_platform.h
@@ -0,0 +1,14 @@
+#ifndef __HISI_CHIP_REGS_H__
+#define __HISI_CHIP_REGS_H__
+
+/* -------------------------------------------------------------------- */
+/* Clock and Reset Generator REG */
+/* -------------------------------------------------------------------- */
+#define REG_CRG_BASE		0x12040000
+
+/* -------------------------------------------------------------------- */
+/* Misc control REG */
+/* -------------------------------------------------------------------- */
+#define REG_MISC_CTRL_BASE  0x12120000
+
+#endif /* End of __HISI_CHIP_REGS_H__ */
diff --git a/arch/arm/mach-hibvt/include/mach/io.h b/arch/arm/mach-hibvt/include/mach/io.h
new file mode 100644
index 0000000..07abf1c
--- /dev/null
+++ b/arch/arm/mach-hibvt/include/mach/io.h
@@ -0,0 +1,8 @@
+#ifndef __ASM_ARM_ARCH_IO_H
+#define __ASM_ARM_ARCH_IO_H
+
+#ifdef CONFIG_ARCH_HI3536DV100
+#include <mach/hi3536dv100_io.h>
+#endif
+
+#endif
diff --git a/arch/arm/mach-hibvt/include/mach/platform.h b/arch/arm/mach-hibvt/include/mach/platform.h
new file mode 100644
index 0000000..00ac02f
--- /dev/null
+++ b/arch/arm/mach-hibvt/include/mach/platform.h
@@ -0,0 +1,8 @@
+#ifndef __HISI_PLATFORM_H__
+#define __HISI_PLATFORM_H__
+
+#ifdef CONFIG_ARCH_HI3536DV100
+#include <mach/hi3536dv100_platform.h>
+#endif
+
+#endif /* End of __HISI_PLATFORM_H__ */
diff --git a/arch/arm/mach-hibvt/mach-hi3536dv100.c b/arch/arm/mach-hibvt/mach-hi3536dv100.c
new file mode 100644
index 0000000..7b27dfa
--- /dev/null
+++ b/arch/arm/mach-hibvt/mach-hi3536dv100.c
@@ -0,0 +1,70 @@
+/*
+ * Copyright (c) 2016-2017 HiSilicon Technologies Co., Ltd.
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program. If not, see <http://www.gnu.org/licenses/>.
+ *
+*/
+
+#include <linux/clocksource.h>
+#include <linux/irqchip.h>
+
+#include <asm/mach/arch.h>
+#include <asm/mach/map.h>
+#include <mach/io.h>
+
+/*
+ * This table is only for optimization. Since ioremap() could always share
+ * the same mapping if it's defined as static IO mapping.
+ *
+ * Without this table, system could also work. The cost is some virtual address
+ * spaces wasted since ioremap() may be called multi times for the same
+ * IO space.
+ */
+static struct map_desc hi3536dv100_io_desc[] __initdata = {
+	/* hi3536dv100_IOCH1 */
+	{
+		.virtual    = HI3536DV100_IOCH1_VIRT,
+		.pfn        = __phys_to_pfn(HI3536DV100_IOCH1_PHYS),
+		.length     = HI3536DV100_IOCH1_SIZE,
+		.type       = MT_DEVICE
+	},
+	/* hi3536dv100_IOCH2 */
+	{
+		.virtual        = HI3536DV100_IOCH2_VIRT,
+		.pfn            = __phys_to_pfn(HI3536DV100_IOCH2_PHYS),
+		.length         = HI3536DV100_IOCH2_SIZE,
+		.type           = MT_DEVICE
+	},
+	/* hi3536dv100_IOCH3 */
+	{
+		.virtual        = HI3536DV100_IOCH3_VIRT,
+		.pfn            = __phys_to_pfn(HI3536DV100_IOCH3_PHYS),
+		.length         = HI3536DV100_IOCH3_SIZE,
+		.type           = MT_DEVICE
+	},
+};
+
+static void __init hi3536dv100_map_io(void)
+{
+	iotable_init(hi3536dv100_io_desc, ARRAY_SIZE(hi3536dv100_io_desc));
+}
+static const char *const hi3536dv100_compat[] __initconst = {
+	"hisilicon,hi3536dv100",
+	NULL,
+};
+
+DT_MACHINE_START(HI3536DV100_DT, "Hisilicon Hi3536DV100 (Flattened Device Tree)")
+	.map_io		= hi3536dv100_map_io,
+	.dt_compat	= hi3536dv100_compat,
+MACHINE_END
diff --git a/include/dt-bindings/clock/hi3536dv100-clock.h b/include/dt-bindings/clock/hi3536dv100-clock.h
new file mode 100644
index 0000000..71b9038
--- /dev/null
+++ b/include/dt-bindings/clock/hi3536dv100-clock.h
@@ -0,0 +1,82 @@
+/*
+ * Copyright (c) 2016-2017 HiSilicon Technologies Co., Ltd.
+ *
+ * This program is free software; you can redistribute  it and/or modify it
+ * under  the terms of  the GNU General Public License as published by the
+ * Free Software Foundation;  either version 2 of the  License, or (at your
+ * option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+
+#ifndef __DTS_HI3536DV100_CLOCK_H
+#define __DTS_HI3536DV100_CLOCK_H
+
+/* clk in Hi3536D CRG */
+/* fixed rate clocks */
+#define HI3536DV100_FIXED_3M		1
+#define HI3536DV100_FIXED_6M		2
+#define HI3536DV100_FIXED_12M		3
+#define HI3536DV100_FIXED_24M		4
+#define HI3536DV100_FIXED_50M		5
+#define HI3536DV100_FIXED_83P3M		6
+#define HI3536DV100_FIXED_100M		7
+#define HI3536DV100_FIXED_125M		8
+#define HI3536DV100_FIXED_148P5M	9
+#define HI3536DV100_FIXED_150M		10
+#define HI3536DV100_FIXED_200M		11
+#define HI3536DV100_FIXED_250M		12
+#define HI3536DV100_FIXED_300M		13
+#define HI3536DV100_FIXED_324M		14
+#define HI3536DV100_FIXED_342M		15
+#define HI3536DV100_FIXED_375M		16
+#define HI3536DV100_FIXED_400M		17
+#define HI3536DV100_FIXED_448M		18
+#define HI3536DV100_FIXED_500M		19
+#define HI3536DV100_FIXED_540M		20
+#define HI3536DV100_FIXED_600M		21
+#define HI3536DV100_FIXED_750M		22
+#define HI3536DV100_FIXED_1500M		23
+
+/* mux clocks */
+#define HI3536DV100_SYSAXI_CLK		24
+#define HI3536DV100_SYSAPB_CLK		25
+#define HI3536DV100_FMC_MUX			26
+#define HI3536DV100_UART_MUX		27
+
+/* gate clocks */
+#define HI3536DV100_UART0_CLK		28
+#define HI3536DV100_UART1_CLK		29
+#define HI3536DV100_UART2_CLK		30
+#define HI3536DV100_FMC_CLK			31
+#define HI3536DV100_ETH0_CLK		32
+#define HI3536DV100_ETH0_PHY_CLK	33
+#define HI3536DV100_USB2_BUS_CLK	34
+#define HI3536DV100_USB2_CLK		35
+#define HI3536DV100_SATA_CLK		36
+#define HI3536DV100_DMAC_CLK		37
+
+#define HI3536DV100_CRG_NR_CLKS		40
+#define HI3536DV100_CRG_NR_RSTS		0x200
+
+/* clock in system control */
+/* mux clocks */
+#define HI3536DV100_TIME0_0_CLK		1
+#define HI3536DV100_TIME0_1_CLK		2
+#define HI3536DV100_TIME1_2_CLK		3
+#define HI3536DV100_TIME1_3_CLK		4
+#define HI3536DV100_TIME2_4_CLK		5
+#define HI3536DV100_TIME2_5_CLK		6
+#define HI3536DV100_TIME3_6_CLK		7
+#define HI3536DV100_TIME3_7_CLK		8
+
+#define HI3536DV100_SYS_NR_CLKS		10
+#define HI3536DV100_SYS_NR_RSTS		0x10
+#endif	/* __DTS_HI3536DV100_CLOCK_H */
